/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "models/OAIEventType.h"
#include "models/OAIOneOfTouchEventTemperatureEventObjectPresentEventBatteryStatusEventNetworkStatusEventLabelsChangedEventConnectionStatusEventEthernetStatusEventCellularStatusEventConnectionLatencyEvent.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventId() const;
    void setEventId(const QString &event_id);

    QString getTargetName() const;
    void setTargetName(const QString &target_name);

    OAIEventType getEventType() const;
    void setEventType(const OAIEventType &event_type);

    OAIOneOfTouchEventTemperatureEventObjectPresentEventBatteryStatusEventNetworkStatusEventLabelsChangedEventConnectionStatusEventEthernetStatusEventCellularStatusEventConnectionLatencyEvent getData() const;
    void setData(const OAIOneOfTouchEventTemperatureEventObjectPresentEventBatteryStatusEventNetworkStatusEventLabelsChangedEventConnectionStatusEventEthernetStatusEventCellularStatusEventConnectionLatencyEvent &data);

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    QString target_name;
    bool m_target_name_isSet;
    bool m_target_name_isValid;

    OAIEventType event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    OAIOneOfTouchEventTemperatureEventObjectPresentEventBatteryStatusEventNetworkStatusEventLabelsChangedEventConnectionStatusEventEthernetStatusEventCellularStatusEventConnectionLatencyEvent data;
    bool m_data_isSet;
    bool m_data_isValid;

    QDateTime timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QMap<QString, QString> labels;
    bool m_labels_isSet;
    bool m_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
