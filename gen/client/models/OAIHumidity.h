/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHumidity.h
 *
 * 
 */

#ifndef OAIHumidity_H
#define OAIHumidity_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHumidity : public OAIObject {
public:
    OAIHumidity();
    OAIHumidity(QString json);
    ~OAIHumidity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getTemperature() const;
    void setTemperature(const float &temperature);

    float getRelativeHumidity() const;
    void setRelativeHumidity(const float &relative_humidity);

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float temperature;
    bool m_temperature_isSet;
    bool m_temperature_isValid;

    float relative_humidity;
    bool m_relative_humidity_isSet;
    bool m_relative_humidity_isValid;

    QDateTime update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHumidity)

#endif // OAIHumidity_H
