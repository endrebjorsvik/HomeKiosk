/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkStatusCloudConnector.h
 *
 * 
 */

#ifndef OAINetworkStatusCloudConnector_H
#define OAINetworkStatusCloudConnector_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkStatusCloudConnector : public OAIObject {
public:
    OAINetworkStatusCloudConnector();
    OAINetworkStatusCloudConnector(QString json);
    ~OAINetworkStatusCloudConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);

    qint32 getSignalStrength() const;
    void setSignalStrength(const qint32 &signal_strength);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 signal_strength;
    bool m_signal_strength_isSet;
    bool m_signal_strength_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkStatusCloudConnector)

#endif // OAINetworkStatusCloudConnector_H
