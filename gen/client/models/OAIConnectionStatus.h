/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionStatus.h
 *
 * 
 */

#ifndef OAIConnectionStatus_H
#define OAIConnectionStatus_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnectionStatus : public OAIObject {
public:
    OAIConnectionStatus();
    OAIConnectionStatus(QString json);
    ~OAIConnectionStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnection() const;
    void setConnection(const QString &connection);

    QList<QString> getAvailable() const;
    void setAvailable(const QList<QString> &available);

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString connection;
    bool m_connection_isSet;
    bool m_connection_isValid;

    QList<QString> available;
    bool m_available_isSet;
    bool m_available_isValid;

    QDateTime update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionStatus)

#endif // OAIConnectionStatus_H
