/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEthernetStatusEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEthernetStatusEvent::OAIEthernetStatusEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEthernetStatusEvent::OAIEthernetStatusEvent() {
    this->initializeModel();
}

OAIEthernetStatusEvent::~OAIEthernetStatusEvent() {}

void OAIEthernetStatusEvent::initializeModel() {

    m_ethernet_status_isSet = false;
    m_ethernet_status_isValid = false;
}

void OAIEthernetStatusEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEthernetStatusEvent::fromJsonObject(QJsonObject json) {

    m_ethernet_status_isValid = ::OpenAPI::fromJsonValue(ethernet_status, json[QString("ethernetStatus")]);
    m_ethernet_status_isSet = !json[QString("ethernetStatus")].isNull() && m_ethernet_status_isValid;
}

QString OAIEthernetStatusEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEthernetStatusEvent::asJsonObject() const {
    QJsonObject obj;
    if (ethernet_status.isSet()) {
        obj.insert(QString("ethernetStatus"), ::OpenAPI::toJsonValue(ethernet_status));
    }
    return obj;
}

OAIEthernetStatus OAIEthernetStatusEvent::getEthernetStatus() const {
    return ethernet_status;
}
void OAIEthernetStatusEvent::setEthernetStatus(const OAIEthernetStatus &ethernet_status) {
    this->ethernet_status = ethernet_status;
    this->m_ethernet_status_isSet = true;
}

bool OAIEthernetStatusEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (ethernet_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEthernetStatusEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
