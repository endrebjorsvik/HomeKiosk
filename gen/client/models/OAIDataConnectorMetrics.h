/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataConnectorMetrics.h
 *
 * 
 */

#ifndef OAIDataConnectorMetrics_H
#define OAIDataConnectorMetrics_H

#include <QJsonObject>


#include <QString>

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAIDataConnectorMetrics: public OAIObject {
public:
    OAIDataConnectorMetrics();
    OAIDataConnectorMetrics(QString json);
    ~OAIDataConnectorMetrics() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    qint32 getSuccessCount() const;
    void setSuccessCount(const qint32 &success_count);

    
    qint32 getErrorCount() const;
    void setErrorCount(const qint32 &error_count);

    
    QString getLatency99p() const;
    void setLatency99p(const QString &latency99p);

    
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    qint32 success_count;
    bool m_success_count_isSet;
    bool m_success_count_isValid;
    
    qint32 error_count;
    bool m_error_count_isSet;
    bool m_error_count_isValid;
    
    QString latency99p;
    bool m_latency99p_isSet;
    bool m_latency99p_isValid;
    
    };

}

Q_DECLARE_METATYPE(OpenAPI::OAIDataConnectorMetrics)

#endif // OAIDataConnectorMetrics_H
