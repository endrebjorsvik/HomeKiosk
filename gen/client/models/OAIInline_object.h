/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_object.h
 *
 * 
 */

#ifndef OAIInline_object_H
#define OAIInline_object_H

#include <QJsonObject>


#include <QList>
#include <QMap>

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAIInline_object: public OAIObject {
public:
    OAIInline_object();
    OAIInline_object(QString json);
    ~OAIInline_object() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    QList<QString> getDevices() const;
    void setDevices(const QList<QString> &devices);

    
    QMap<QString, QString> getAddLabels() const;
    void setAddLabels(const QMap<QString, QString> &add_labels);

    
    QList<QString> getRemoveLabels() const;
    void setRemoveLabels(const QList<QString> &remove_labels);

    
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    QList<QString> devices;
    bool m_devices_isSet;
    bool m_devices_isValid;
    
    QMap<QString, QString> add_labels;
    bool m_add_labels_isSet;
    bool m_add_labels_isValid;
    
    QList<QString> remove_labels;
    bool m_remove_labels_isSet;
    bool m_remove_labels_isValid;
    
    };

}

Q_DECLARE_METATYPE(OpenAPI::OAIInline_object)

#endif // OAIInline_object_H
