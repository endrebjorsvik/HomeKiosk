/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIServiceAccount.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIServiceAccount::OAIServiceAccount(QString json) {
    this->init();
    this->fromJson(json);
}

OAIServiceAccount::OAIServiceAccount() {
    this->init();
}

OAIServiceAccount::~OAIServiceAccount() {

}

void
OAIServiceAccount::init() {
    
    m_name_isSet = false;
    m_name_isValid = false;
    
    m_email_isSet = false;
    m_email_isValid = false;
    
    m_display_name_isSet = false;
    m_display_name_isValid = false;
    
    m_enable_basic_auth_isSet = false;
    m_enable_basic_auth_isValid = false;
    
    m_create_time_isSet = false;
    m_create_time_isValid = false;
    
    m_update_time_isSet = false;
    m_update_time_isValid = false;
    }

void
OAIServiceAccount::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIServiceAccount::fromJsonObject(QJsonObject json) {
    
    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    
    m_email_isValid = ::OpenAPI::fromJsonValue(email, json[QString("email")]);
    
    
    m_display_name_isValid = ::OpenAPI::fromJsonValue(display_name, json[QString("displayName")]);
    
    
    m_enable_basic_auth_isValid = ::OpenAPI::fromJsonValue(enable_basic_auth, json[QString("enableBasicAuth")]);
    
    
    m_create_time_isValid = ::OpenAPI::fromJsonValue(create_time, json[QString("createTime")]);
    
    
    m_update_time_isValid = ::OpenAPI::fromJsonValue(update_time, json[QString("updateTime")]);
    
    
}

QString
OAIServiceAccount::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIServiceAccount::asJsonObject() const {
    QJsonObject obj;
	if(m_name_isSet){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(m_email_isSet){
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(email));
    }
	if(m_display_name_isSet){
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(display_name));
    }
	if(m_enable_basic_auth_isSet){
        obj.insert(QString("enableBasicAuth"), ::OpenAPI::toJsonValue(enable_basic_auth));
    }
	if(m_create_time_isSet){
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(create_time));
    }
	if(m_update_time_isSet){
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(update_time));
    }
    return obj;
}


QString
OAIServiceAccount::getName() const {
    return name;
}
void
OAIServiceAccount::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}


QString
OAIServiceAccount::getEmail() const {
    return email;
}
void
OAIServiceAccount::setEmail(const QString &email) {
    this->email = email;
    this->m_email_isSet = true;
}


QString
OAIServiceAccount::getDisplayName() const {
    return display_name;
}
void
OAIServiceAccount::setDisplayName(const QString &display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}


bool
OAIServiceAccount::isEnableBasicAuth() const {
    return enable_basic_auth;
}
void
OAIServiceAccount::setEnableBasicAuth(const bool &enable_basic_auth) {
    this->enable_basic_auth = enable_basic_auth;
    this->m_enable_basic_auth_isSet = true;
}


QDateTime
OAIServiceAccount::getCreateTime() const {
    return create_time;
}
void
OAIServiceAccount::setCreateTime(const QDateTime &create_time) {
    this->create_time = create_time;
    this->m_create_time_isSet = true;
}


QDateTime
OAIServiceAccount::getUpdateTime() const {
    return update_time;
}
void
OAIServiceAccount::setUpdateTime(const QDateTime &update_time) {
    this->update_time = update_time;
    this->m_update_time_isSet = true;
}

bool
OAIServiceAccount::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_email_isSet){ isObjectUpdated = true; break;}
    
        if(m_display_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_enable_basic_auth_isSet){ isObjectUpdated = true; break;}
    
        if(m_create_time_isSet){ isObjectUpdated = true; break;}
    
        if(m_update_time_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIServiceAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

