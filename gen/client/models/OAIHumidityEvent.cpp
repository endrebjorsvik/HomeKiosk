/**
 * API, Disruptive Technologies
 * This api provides access to management, configuration and access to streams of data from Disruptive Technologies sensor solutions. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHumidityEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHumidityEvent::OAIHumidityEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHumidityEvent::OAIHumidityEvent() {
    this->initializeModel();
}

OAIHumidityEvent::~OAIHumidityEvent() {}

void OAIHumidityEvent::initializeModel() {

    m_humidity_isSet = false;
    m_humidity_isValid = false;
}

void OAIHumidityEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHumidityEvent::fromJsonObject(QJsonObject json) {

    m_humidity_isValid = ::OpenAPI::fromJsonValue(humidity, json[QString("humidity")]);
    m_humidity_isSet = !json[QString("humidity")].isNull() && m_humidity_isValid;
}

QString OAIHumidityEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHumidityEvent::asJsonObject() const {
    QJsonObject obj;
    if (humidity.isSet()) {
        obj.insert(QString("humidity"), ::OpenAPI::toJsonValue(humidity));
    }
    return obj;
}

OAIHumidity OAIHumidityEvent::getHumidity() const {
    return humidity;
}
void OAIHumidityEvent::setHumidity(const OAIHumidity &humidity) {
    this->humidity = humidity;
    this->m_humidity_isSet = true;
}

bool OAIHumidityEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (humidity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHumidityEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
